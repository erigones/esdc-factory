<?xml version="1.0"?>
<opnsense>
  <theme>opnsense</theme>
  <sysctl>
    <item>
      <descr>Disable the pf ftp proxy handler.</descr>
      <tunable>debug.pfftpproxy</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Increase UFS read-ahead speeds to match current state of hard drives and NCQ. More information here: http://ivoras.sharanet.org/blog/tree/2010-11-19.ufs-read-ahead.html</descr>
      <tunable>vfs.read_max</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Set the ephemeral port range to be lower.</descr>
      <tunable>net.inet.ip.portrange.first</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Drop packets to closed TCP ports without returning a RST</descr>
      <tunable>net.inet.tcp.blackhole</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Do not send ICMP port unreachable messages for closed UDP ports</descr>
      <tunable>net.inet.udp.blackhole</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Randomize the ID field in IP packets (default is 0: sequential IP IDs)</descr>
      <tunable>net.inet.ip.random_id</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>
        Source routing is another way for an attacker to try to reach non-routable addresses behind your box.
        It can also be used to probe for information about your internal networks. These functions come enabled
        as part of the standard FreeBSD core system.
      </descr>
      <tunable>net.inet.ip.sourceroute</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>
        Source routing is another way for an attacker to try to reach non-routable addresses behind your box.
        It can also be used to probe for information about your internal networks. These functions come enabled
        as part of the standard FreeBSD core system.
      </descr>
      <tunable>net.inet.ip.accept_sourceroute</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>
        Redirect attacks are the purposeful mass-issuing of ICMP type 5 packets. In a normal network, redirects
        to the end stations should not be required. This option enables the NIC to drop all inbound ICMP redirect
        packets without returning a response.
      </descr>
      <tunable>net.inet.icmp.drop_redirect</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>
        This option turns off the logging of redirect packets because there is no limit and this could fill
        up your logs consuming your whole hard drive.
      </descr>
      <tunable>net.inet.icmp.log_redirect</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Drop SYN-FIN packets (breaks RFC1379, but nobody uses it anyway)</descr>
      <tunable>net.inet.tcp.drop_synfin</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Enable sending IPv4 redirects</descr>
      <tunable>net.inet.ip.redirect</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Enable sending IPv6 redirects</descr>
      <tunable>net.inet6.ip6.redirect</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Enable privacy settings for IPv6 (RFC 4941)</descr>
      <tunable>net.inet6.ip6.use_tempaddr</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Prefer privacy addresses and use them over the normal addresses</descr>
      <tunable>net.inet6.ip6.prefer_tempaddr</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Generate SYN cookies for outbound SYN-ACK packets</descr>
      <tunable>net.inet.tcp.syncookies</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Maximum incoming/outgoing TCP datagram size (receive)</descr>
      <tunable>net.inet.tcp.recvspace</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Maximum incoming/outgoing TCP datagram size (send)</descr>
      <tunable>net.inet.tcp.sendspace</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>IP Fastforwarding</descr>
      <tunable>net.inet.ip.fastforwarding</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Do not delay ACK to try and piggyback it onto a data packet</descr>
      <tunable>net.inet.tcp.delayed_ack</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Maximum outgoing UDP datagram size</descr>
      <tunable>net.inet.udp.maxdgram</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Handling of non-IP packets which are not passed to pfil (see if_bridge(4))</descr>
      <tunable>net.link.bridge.pfil_onlyip</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Set to 1 to additionally filter on the physical interface for locally destined packets</descr>
      <tunable>net.link.bridge.pfil_local_phys</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Set to 0 to disable filtering on the incoming and outgoing member interfaces.</descr>
      <tunable>net.link.bridge.pfil_member</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Set to 1 to enable filtering on the bridge interface</descr>
      <tunable>net.link.bridge.pfil_bridge</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Allow unprivileged access to tap(4) device nodes</descr>
      <tunable>net.link.tap.user_open</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Randomize PID's (see src/sys/kern/kern_fork.c: sysctl_kern_randompid())</descr>
      <tunable>kern.randompid</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Maximum size of the IP input queue</descr>
      <tunable>net.inet.ip.intr_queue_maxlen</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Disable CTRL+ALT+Delete reboot from keyboard.</descr>
      <tunable>hw.syscons.kbd_reboot</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Enable TCP extended debugging</descr>
      <tunable>net.inet.tcp.log_debug</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Set ICMP Limits</descr>
      <tunable>net.inet.icmp.icmplim</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>TCP Offload Engine</descr>
      <tunable>net.inet.tcp.tso</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>UDP Checksums</descr>
      <tunable>net.inet.udp.checksum</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Maximum socket buffer size</descr>
      <tunable>kern.ipc.maxsockbuf</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Page Table Isolation (Meltdown mitigation, requires reboot.)</descr>
      <tunable>vm.pmap.pti</tunable>
      <value>default</value>
    </item>
    <item>
      <descr>Disable Indirect Branch Restricted Speculation (Spectre V2 mitigation)</descr>
      <tunable>hw.ibrs_disable</tunable>
      <value>default</value>
    </item>
  </sysctl>
  <system>
    <optimization>normal</optimization>
    <hostname>{{ hostname | default("OPNSense") }}</hostname>
    <domain>{{ domain | default("localdomain") }}</domain>
    <dnsallowoverride/>
    <group>
      <name>admins</name>
      <description>System Administrators</description>
      <scope>system</scope>
      <gid>1999</gid>
      <member>0</member>
      <priv>user-shell-access</priv>
      <priv>page-all</priv>
    </group>
    <user>
      <name>root</name>
      <descr>System Administrator</descr>
      <scope>system</scope>
      <groupname>admins</groupname>
      <password>{{ root_hash | default("$2y$10$YRVoF4SgskIsrXOvOQjGieB9XqHPRra9R7d80B3BZdbY/j21TwBfS") }}</password>
      <uid>0</uid>
      <email>{{ root_email | default("") }}</email>
      <authorizedkeys>{{ root_authorized_keys | default("") | b64encode }}</authorizedkeys>
      <apikeys>
        <item>
            <key>{{ root_api_key }}</key>
            <secret>{{ root_api_secret }}</secret>
        </item>
      </apikeys>
      <shell>{{ root_shell | default("/usr/local/sbin/opnsense-shell") }}</shell>
    </user>
    <nextuid>2000</nextuid>
    <nextgid>2000</nextgid>
    <timezone>Etc/UTC</timezone>
    <time-update-interval>3600</time-update-interval>
    <timeservers>{{ timeservers | default("0.opnsense.pool.ntp.org 1.opnsense.pool.ntp.org 2.opnsense.pool.ntp.org 3.opnsense.pool.ntp.org") }}</timeservers>
    <webgui>
      <protocol>https</protocol>
      <nohttpreferercheck>1</nohttpreferercheck>
      <ssl-certref>5ea86ca69a063</ssl-certref>
      <port>{{ opnsense_mgmt_port | default("666") }}</port>
      <ssl-ciphers/>
      <interfaces/>
      <compression/>
    </webgui>
    <disablenatreflection>yes</disablenatreflection>
    <usevirtualterminal>1</usevirtualterminal>
    <disableconsolemenu>1</disableconsolemenu>
    <disablechecksumoffloading>1</disablechecksumoffloading>
    <disablesegmentationoffloading>1</disablesegmentationoffloading>
    <disablelargereceiveoffloading>1</disablelargereceiveoffloading>
    <ipv6allow/>
    <powerd_ac_mode>hadp</powerd_ac_mode>
    <powerd_battery_mode>hadp</powerd_battery_mode>
    <powerd_normal_mode>hadp</powerd_normal_mode>
    <bogons>
      <interval>monthly</interval>
    </bogons>
    <kill_states/>
    <backupcount>60</backupcount>
    <crypto_hardware>aesni</crypto_hardware>
    <pf_share_forward>1</pf_share_forward>
    <lb_use_sticky>1</lb_use_sticky>
    <ssh>
      <noauto>1</noauto>
      <interfaces/>
      <enabled>enabled</enabled>
      <permitrootlogin>1</permitrootlogin>
      <passwordauth>1</passwordauth>
    </ssh>
    <backup>
      <nextcloud version="1.0.0">
        <enabled>0</enabled>
        <url/>
        <user/>
        <password/>
        <password_encryption/>
        <backupdir>OPNsense-Backup</backupdir>
      </nextcloud>
    </backup>
    <serialspeed>115200</serialspeed>
    <primaryconsole>video</primaryconsole>
  </system>
  <interfaces>
    <{{ nic_public_name | default("public") }}>
      <if>{{ nic_public_if | default("vtnet0") }}</if>
      <descr>{{ nic_public_name | default("public") }}</descr>
      <enable>1</enable>
      <lock>1</lock>
      <spoofmac/>
      {%- if nic_public_blockprivnets is defined and nic_public_blockprivnets == "1" %}
	  <blockpriv>1</blockpriv>
	  <blockbogons>1</blockbogons>
	  {%- endif %}
      <ipaddr>{{ nic_public_ip | default("dhcp") }}</ipaddr>
      <dhcphostname/>
      <alias-address/>
      <alias-subnet>32</alias-subnet>
      <dhcprejectfrom/>
      <adv_dhcp_pt_timeout/>
      <adv_dhcp_pt_retry/>
      <adv_dhcp_pt_select_timeout/>
      <adv_dhcp_pt_reboot/>
      <adv_dhcp_pt_backoff_cutoff/>
      <adv_dhcp_pt_initial_interval/>
      <adv_dhcp_pt_values>SavedCfg</adv_dhcp_pt_values>
      <adv_dhcp_send_options/>
      <adv_dhcp_request_options/>
      <adv_dhcp_required_options/>
      <adv_dhcp_option_modifiers/>
      <adv_dhcp_config_advanced/>
      <adv_dhcp_config_file_override/>
      <adv_dhcp_config_file_override_path/>
      <ipaddrv6>dhcp6</ipaddrv6>
      <dhcp6-ia-pd-len>0</dhcp6-ia-pd-len>
      <adv_dhcp6_interface_statement_send_options/>
      <adv_dhcp6_interface_statement_request_options/>
      <adv_dhcp6_interface_statement_information_only_enable/>
      <adv_dhcp6_interface_statement_script/>
      <adv_dhcp6_id_assoc_statement_address_enable/>
      <adv_dhcp6_id_assoc_statement_address/>
      <adv_dhcp6_id_assoc_statement_address_id/>
      <adv_dhcp6_id_assoc_statement_address_pltime/>
      <adv_dhcp6_id_assoc_statement_address_vltime/>
      <adv_dhcp6_id_assoc_statement_prefix_enable/>
      <adv_dhcp6_id_assoc_statement_prefix/>
      <adv_dhcp6_id_assoc_statement_prefix_id/>
      <adv_dhcp6_id_assoc_statement_prefix_pltime/>
      <adv_dhcp6_id_assoc_statement_prefix_vltime/>
      <adv_dhcp6_prefix_interface_statement_sla_len/>
      <adv_dhcp6_authentication_statement_authname/>
      <adv_dhcp6_authentication_statement_protocol/>
      <adv_dhcp6_authentication_statement_algorithm/>
      <adv_dhcp6_authentication_statement_rdm/>
      <adv_dhcp6_key_info_statement_keyname/>
      <adv_dhcp6_key_info_statement_realm/>
      <adv_dhcp6_key_info_statement_keyid/>
      <adv_dhcp6_key_info_statement_secret/>
      <adv_dhcp6_key_info_statement_expire/>
      <adv_dhcp6_config_advanced/>
      <adv_dhcp6_config_file_override/>
      <adv_dhcp6_config_file_override_path/>
    </{{ nic_public_name | default("public") }}>
    <{{ nic_private_name | default("private") }}>
      <if>{{ nic_private_if | default("vtnet1") }}</if>
      <descr>{{ nic_private_name | default("private") }}</descr>
      <enable>{% if nic_private_name is defined %}1{% else %}0{% endif %}</enable>
      <lock>1</lock>
      <spoofmac/>
      <ipaddr>{{ nic_private_ip | default("dhcp") }}</ipaddr>
      <subnet/>
      <gateway/>
      <ipaddrv6>dhcp6</ipaddrv6>
      <subnetv6/>
      <gatewayv6/>
      <media/>
      <mediaopt/>
    </{{ nic_private_name | default("private") }}>
  </interfaces>
  <gateways>
    <gateway_item>
      <interface>{{ nic_public_name | default("public") }}</interface>
      <gateway>{{ default_gw | default("dynamic") }}</gateway>
      <name>public4gw</name>
      <weight>1</weight>
      <ipprotocol>inet</ipprotocol>
      <interval/>
      <descr/>
      <avg_delay_samples/>
      <avg_loss_samples/>
      <avg_loss_delay_samples/>
      <defaultgw>1</defaultgw>
    </gateway_item>
    <gateway_item>
      <interface>{{ nic_public_name | default("public") }}</interface>
      <gateway>dynamic</gateway>
      <name>public6gw</name>
      <weight>1</weight>
      <ipprotocol>inet6</ipprotocol>
      <interval/>
      <descr/>
      <avg_delay_samples/>
      <avg_loss_samples/>
      <avg_loss_delay_samples/>
      <defaultgw>1</defaultgw>
    </gateway_item>
  </gateways>
  <dhcpd/>
  <unbound/>
  <snmpd>
    <syslocation/>
    <syscontact/>
    <rocommunity>public</rocommunity>
  </snmpd>
  <syslog>
    <reverse/>
  </syslog>
  <nat>
    <outbound>
      <mode>hybrid</mode>
    </outbound>
    <rule>
      <protocol>tcp</protocol>
      <interface>{{ nic_public_name | default("public") }}</interface>
      <ipprotocol>inet</ipprotocol>
      <descr>Forward public HTTPS access to Danube Cloud mgmt01 VM</descr>
      <tag/>
      <tagged/>
      <poolopts/>
      <associated-rule-id>nat_5e0ca7172af769.00503376</associated-rule-id>
      <target>{{ mgmt01_ip }}</target>
      <local-port>443</local-port>
      <source>
        <any>1</any>
      </source>
      <destination>
        <network>(self)</network>
        <port>443</port>
      </destination>
    </rule>
    <rule>
      <protocol>tcp/udp</protocol>
      <interface>{{ nic_public_name | default("public") }}</interface>
      <ipprotocol>inet</ipprotocol>
      <descr>Forward public DNS queries to Danube Cloud dns01 VM</descr>
      <tag/>
      <tagged/>
      <poolopts/>
      <associated-rule-id>nat_5e0bc2d51f7b61.88955161</associated-rule-id>
      <target>{{ dns01_ip }}</target>
      <local-port>53</local-port>
      <source>
        <any>1</any>
      </source>
      <destination>
        <network>(self)</network>
        <port>53</port>
      </destination>
    </rule>
  </nat>
  <filter>
    <rule>
      <type>pass</type>
      <interface>{{ nic_private_name | default("private") }}</interface>
      <ipprotocol>inet</ipprotocol>
      <statetype>keep state</statetype>
      <descr>Allow all IPv4 private network traffic</descr>
      <source>
        <any>1</any>
      </source>
      <destination>
        <any>1</any>
      </destination>
    </rule>
    <rule>
      <type>pass</type>
      <interface>{{ nic_public_name | default("public") }}</interface>
      <ipprotocol>inet</ipprotocol>
      <statetype>keep state</statetype>
      <descr>Allow public ICMP ping to this firewall</descr>
      <disablereplyto>1</disablereplyto>
      <protocol>icmp</protocol>
      <icmptype>echoreq</icmptype>
      <source>
        <any>1</any>
      </source>
      <destination>
        <network>(self)</network>
      </destination>
    </rule>
    <rule>
      <type>pass</type>
      <interface>{{ nic_public_name | default("public") }}</interface>
      <ipprotocol>inet46</ipprotocol>
      <statetype>keep state</statetype>
      <descr>CAUTION: Allow public remote access to this firewall via SSH</descr>
      <disablereplyto>1</disablereplyto>
      <protocol>tcp</protocol>
      <source>
        <any>1</any>
      </source>
      <destination>
        <network>(self)</network>
        <port>22</port>
      </destination>
    </rule>
    <rule>
      <type>pass</type>
      <interface>{{ nic_public_name | default("public") }}</interface>
      <ipprotocol>inet46</ipprotocol>
      <statetype>keep state</statetype>
      <descr>CAUTION: Allow public remote access to this firewall via HTTPS</descr>
      <direction>in</direction>
      <disablereplyto>1</disablereplyto>
      <quick>1</quick>
      <protocol>tcp</protocol>
      <source>
        <any>1</any>
      </source>
      <destination>
        <network>(self)</network>
        <port>{{ opnsense_mgmt_port | default("666") }}</port>
      </destination>
    </rule>
    <rule>
      <source>
        <any>1</any>
      </source>
      <interface>{{ nic_public_name | default("public") }}</interface>
      <protocol>tcp</protocol>
      <ipprotocol>inet</ipprotocol>
      <destination>
        <address>{{ mgmt01_ip }}</address>
        <port>443</port>
      </destination>
      <descr>NAT </descr>
      <associated-rule-id>nat_5e0ca7172af769.00503376</associated-rule-id>
    </rule>
    <rule>
      <source>
        <any>1</any>
      </source>
      <interface>{{ nic_public_name | default("public") }}</interface>
      <protocol>tcp/udp</protocol>
      <ipprotocol>inet</ipprotocol>
      <destination>
        <address>{{ dns01_ip }}</address>
        <port>53</port>
      </destination>
      <descr>NAT </descr>
      <associated-rule-id>nat_5e0bc2d51f7b61.88955161</associated-rule-id>
    </rule>
  </filter>
  <rrd>
    <enable/>
  </rrd>
  <load_balancer>
    <monitor_type>
      <name>ICMP</name>
      <type>icmp</type>
      <descr>ICMP</descr>
      <options/>
    </monitor_type>
    <monitor_type>
      <name>TCP</name>
      <type>tcp</type>
      <descr>Generic TCP</descr>
      <options/>
    </monitor_type>
    <monitor_type>
      <name>HTTP</name>
      <type>http</type>
      <descr>Generic HTTP</descr>
      <options>
        <path>/</path>
        <host/>
        <code>200</code>
      </options>
    </monitor_type>
    <monitor_type>
      <name>HTTPS</name>
      <type>https</type>
      <descr>Generic HTTPS</descr>
      <options>
        <path>/</path>
        <host/>
        <code>200</code>
      </options>
    </monitor_type>
    <monitor_type>
      <name>SMTP</name>
      <type>send</type>
      <descr>Generic SMTP</descr>
      <options>
        <send/>
        <expect>220 *</expect>
      </options>
    </monitor_type>
  </load_balancer>
  <ntpd>
    <prefer>{{ timeserver_preferred | default("0.opnsense.pool.ntp.org") }}</prefer>
  </ntpd>
  <widgets>
    <sequence>system_information-container:00000000-col3:show,services_status-container:00000001-col4:show,gateways-container:00000002-col4:show,interface_list-container:00000003-col4:show</sequence>
    <column_count>2</column_count>
  </widgets>
  <OPNsense>
    <captiveportal version="1.0.0">
      <zones/>
      <templates/>
    </captiveportal>
    <cron version="1.0.1">
      <jobs/>
    </cron>
    <Netflow version="1.0.1">
      <capture>
        <interfaces/>
        <egress_only/>
        <version>v9</version>
        <targets/>
      </capture>
      <collect>
        <enable>0</enable>
      </collect>
      <activeTimeout>1800</activeTimeout>
      <inactiveTimeout>15</inactiveTimeout>
    </Netflow>
    <Firewall>
      <Alias version="1.0.0">
        <geoip>
          <url/>
        </geoip>
        <aliases/>
      </Alias>
    </Firewall>
    <Interfaces>
      <vxlans/>
      <loopbacks/>
    </Interfaces>
    <monit version="1.0.8">
      <general>
        <enabled>0</enabled>
        <interval>120</interval>
        <startdelay>120</startdelay>
        <mailserver>127.0.0.1</mailserver>
        <port>25</port>
        <username/>
        <password/>
        <ssl>0</ssl>
        <sslversion>auto</sslversion>
        <sslverify>1</sslverify>
        <logfile>syslog facility log_daemon</logfile>
        <statefile/>
        <eventqueuePath/>
        <eventqueueSlots/>
        <httpdEnabled>0</httpdEnabled>
        <httpdUsername>root</httpdUsername>
        <httpdPassword>ZcLWzjdyZ1apJzOpu</httpdPassword>
        <httpdPort>2812</httpdPort>
        <httpdAllow/>
        <mmonitUrl/>
        <mmonitTimeout>5</mmonitTimeout>
        <mmonitRegisterCredentials>1</mmonitRegisterCredentials>
      </general>
      <alert uuid="99b70c72-1436-4915-9c6a-a8ca08b67075">
        <enabled>0</enabled>
        <recipient>root@localhost.local</recipient>
        <noton>0</noton>
        <events/>
        <format/>
        <reminder>10</reminder>
        <description/>
      </alert>
      <service uuid="d8cdd79f-f5d7-4dba-8aa3-d487c4f009c5">
        <enabled>1</enabled>
        <name>$HOST</name>
        <type>system</type>
        <pidfile/>
        <match/>
        <path/>
        <timeout>300</timeout>
        <address/>
        <interface/>
        <start/>
        <stop/>
        <tests>8fb08be4-1070-4f03-8db9-20db0e0154c2,72f6ba1d-5dd4-41da-8c39-d4c18deed617,f18e0481-b57f-4359-8e6e-456da7539441,9f147f14-c5b3-4ca5-9208-93ea196a370e</tests>
        <depends/>
      </service>
      <service uuid="73925395-191b-4930-aaf9-fcd2e0249713">
        <enabled>1</enabled>
        <name>RootFs</name>
        <type>filesystem</type>
        <pidfile/>
        <match/>
        <path>/</path>
        <timeout>300</timeout>
        <address/>
        <interface/>
        <start/>
        <stop/>
        <tests>28cadc85-49ed-4a37-8e3a-a77b6419bc9e</tests>
        <depends/>
      </service>
      <service uuid="d5aa88ac-f0f0-4505-a22a-e4e54db026e7">
        <enabled>0</enabled>
        <name>carp_status_change</name>
        <type>custom</type>
        <pidfile/>
        <match/>
        <path>/usr/local/opnsense/scripts/OPNsense/Monit/carp_status</path>
        <timeout>300</timeout>
        <address/>
        <interface/>
        <start/>
        <stop/>
        <tests>a1f14dc7-602e-40c6-b434-3434dc373769</tests>
        <depends/>
      </service>
      <service uuid="ac181abe-09c4-4c12-9659-3ed0d86f643e">
        <enabled>0</enabled>
        <name>gateway_alert</name>
        <type>custom</type>
        <pidfile/>
        <match/>
        <path>/usr/local/opnsense/scripts/OPNsense/Monit/gateway_alert</path>
        <timeout>300</timeout>
        <address/>
        <interface/>
        <start/>
        <stop/>
        <tests>4e151f50-3b41-4af2-808c-7c8c6c964f07</tests>
        <depends/>
      </service>
      <test uuid="db212c92-0798-4f46-a9a3-3c7459bf9534">
        <name>Ping</name>
        <type>NetworkPing</type>
        <condition>failed ping</condition>
        <action>alert</action>
        <path/>
      </test>
      <test uuid="84187dc1-d3cc-4e23-827f-45f463077677">
        <name>NetworkLink</name>
        <type>NetworkInterface</type>
        <condition>failed link</condition>
        <action>alert</action>
        <path/>
      </test>
      <test uuid="49cfbac9-e90d-453b-aae8-04d7a336d424">
        <name>NetworkSaturation</name>
        <type>NetworkInterface</type>
        <condition>saturation is greater than 75%</condition>
        <action>alert</action>
        <path/>
      </test>
      <test uuid="8fb08be4-1070-4f03-8db9-20db0e0154c2">
        <name>MemoryUsage</name>
        <type>SystemResource</type>
        <condition>memory usage is greater than 75%</condition>
        <action>alert</action>
        <path/>
      </test>
      <test uuid="72f6ba1d-5dd4-41da-8c39-d4c18deed617">
        <name>CPUUsage</name>
        <type>SystemResource</type>
        <condition>cpu usage is greater than 75%</condition>
        <action>alert</action>
        <path/>
      </test>
      <test uuid="f18e0481-b57f-4359-8e6e-456da7539441">
        <name>LoadAvg1</name>
        <type>SystemResource</type>
        <condition>loadavg (1min) is greater than 2</condition>
        <action>alert</action>
        <path/>
      </test>
      <test uuid="9f147f14-c5b3-4ca5-9208-93ea196a370e">
        <name>LoadAvg5</name>
        <type>SystemResource</type>
        <condition>loadavg (5min) is greater than 1.5</condition>
        <action>alert</action>
        <path/>
      </test>
      <test uuid="6700aa4d-b71d-4651-9790-8400406b8919">
        <name>LoadAvg15</name>
        <type>SystemResource</type>
        <condition>loadavg (15min) is greater than 1</condition>
        <action>alert</action>
        <path/>
      </test>
      <test uuid="28cadc85-49ed-4a37-8e3a-a77b6419bc9e">
        <name>SpaceUsage</name>
        <type>SpaceUsage</type>
        <condition>space usage is greater than 75%</condition>
        <action>alert</action>
        <path/>
      </test>
      <test uuid="a1f14dc7-602e-40c6-b434-3434dc373769">
        <name>ChangedStatus</name>
        <type>ProgramStatus</type>
        <condition>changed status</condition>
        <action>alert</action>
        <path/>
      </test>
      <test uuid="4e151f50-3b41-4af2-808c-7c8c6c964f07">
        <name>NonZeroStatus</name>
        <type>ProgramStatus</type>
        <condition>status != 0</condition>
        <action>alert</action>
        <path/>
      </test>
    </monit>
    <OpenVPNExport version="0.0.1">
      <servers/>
    </OpenVPNExport>
    <Syslog version="1.0.0">
      <general>
        <enabled>1</enabled>
      </general>
      <destinations/>
    </Syslog>
    <TrafficShaper version="1.0.3">
      <pipes/>
      <queues/>
      <rules/>
    </TrafficShaper>
  </OPNsense>
  <ca/>
  <cert>
    <refid>5ea86ca69a063</refid>
    <descr>Web GUI SSL certificate</descr>
    <crt>{{ web_ssl_cert_b64 }}</crt>
    <prv>{{ web_ssl_key_b64 }}</prv>
  </cert>
  <ppps>
    <ppp/>
  </ppps>
  <staticroutes>
    <route/>
  </staticroutes>
</opnsense>
